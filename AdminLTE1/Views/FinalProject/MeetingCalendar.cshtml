@model IEnumerable<AdminLTE1.Models.Users>

@{
    ViewBag.Title = "Meeting Calendar";

    if (User.Identity.IsAuthenticated)
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_NormalLayout.cshtml";
    }
}

<div id="calendar"></div>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"><span id="eventTitle"></span></h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <button id="btnDelete" class="btn btn-default btn-sm pull-right" style="display:none">
                    <span class="glyphicon glyphicon-remove"></span> Remove
                </button>
                <button id="btnEdit" class="btn btn-default btn-sm pull-right" style="margin-right:5px;display:none">
                    <span class="glyphicon glyphicon-pencil"></span> Edit
                </button>
                <p id="pDetails"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="myModalSave" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Save Event</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form class="col-md-12 form-horizontal">
                    <input type="hidden" id="hdEventID" value="0" />
                    <div class="form-group">
                        <label>Subject</label>
                        <input type="text" id="txtSubject" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Start</label>
                        <div class="input-group date" id="dtp1">
                            <input type="text" id="txtStart" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label><input type="checkbox" id="chkIsAllDay" checked="checked" />  Is All Day event</label>
                        </div>
                    </div>
                    <div class="form-group" id="divEndDate" style="display:none">
                        <label>End</label>
                        <div class="input-group date" id="dtp2">
                            <input type="text" id="txtEnd" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <textarea id="txtDescription" rows="3" class="form-control"></textarea>
                    </div>

                    <div class="form-group">
                        <label>Invite</label>
                        <select id="inviteId" class="form-control" multiple="multiple">
                            @foreach (var item in Model)
                            {
                                <option value="@item.UserId">@item.UserName</option>
                            }
                        </select>
                    </div>
                    <button type="button" id="btnSave" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>

<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.css" rel="stylesheet" />
<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.print.css" rel="stylesheet" media="print" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css">

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.12/css/bootstrap-multiselect.css">

@section Scripts{
    <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.15.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.12/js/bootstrap-multiselect.js"></script>

    <script>
        $(document).ready(function () {

            $('#inviteId').multiselect({
                includeSelectAllOption: true,
                enableFiltering: true,
                nonSelectedText: 'Select Users',
                maxHeight: 200

            });

            var selectedEvent = null;
            FetchEventAndRenderCalendar();
            function FetchEventAndRenderCalendar() {
                var events = [];

                $.ajax({
                    type: "GET",
                    url: "/FinalProject/GetEvents",
                    success: function (data) {
                        $.each(data, function (i, v) {
                            events.push({
                                eventId: v.Id,
                                title: v.Subject,
                                description: v.Description,
                                start: moment(v.StartDate),
                                end: v.EndDate != null ? moment(v.EndDate) : null,
                                allDay: v.IsAllDayEvent
                            });
                        });

                        GenerateCalender(events);
                    },
                    error: function (error) {
                        alert('failed');
                    }
                });
            }

            function CheckUser() {
                var checkValue;
                $.ajax({
                    type: "GET",
                    async: false,
                    url: "/FinalProject/LoggedUserNHeadUser",
                    success: function (data) {
                        debugger;
                        if (data.checkUser) {

                            checkValue = true;
                        }
                        else {
                            checkValue = false;
                        }
                    },
                    error: function () {
                        alert('Failed');
                    }
                });
                return checkValue;
            }

            function GenerateCalender(events) {
                var userValue = CheckUser();

                $('#calendar').fullCalendar('destroy');
                $('#calendar').fullCalendar({
                    contentHeight: 400,
                    defaultDate: new Date(),
                    timeFormat: 'h(:mm)a',
                    header: {
                        left: 'prev,next today',
                        center: 'title',
                        right: 'month,basicWeek,basicDay,agenda'
                    },
                    eventLimit: true,
                    eventColor: '#378006',
                    events: events,
                    eventClick: function (calEvent) {
                        selectedEvent = calEvent;
                        $('#myModal #eventTitle').text(calEvent.title);
                        var $description = $('<div/>');
                        $description.append($('<p/>').html('<b>Start: </b>' + calEvent.start.format("DD-MMM-YYYY HH:mm a")));
                        if (calEvent.end != null) {
                            $description.append($('<p/>').html('<b>End: </b>' + calEvent.end.format("DD-MMM-YYYY HH:mm a")));
                        }
                        if (calEvent.allDay) {
                            $description.append($('<p/>').html('<b>All Day Event: </b>' + calEvent.allDay));
                        }
                        $description.append($('<p/>').html('<b>Description: </b>' + calEvent.description));
                        $('#myModal #pDetails').empty().html($description);

                        $('#myModal').modal();
                        if (userValue == true) {
                            $('#btnEdit').show();
                            $('#btnDelete').show();
                        }
                    },

                    selectable: userValue,

                    //validRange: function (nowDate) {
                    //    return { start: nowDate }
                    //},

                    select: function (start, end) {

                        //if (start.isBefore(moment())) {
                        //    $('#calendar').fullCalendar('unselect');
                        //    alert('Please select present or future date');
                        //    return false;
                        //}

                        if (moment().diff(start, 'days') > 0) {
                            $('#calendar').fullCalendar('unselect');
                            alert('Please select present or future date');
                            return false;
                        }

                        selectedEvent = {
                            eventId: 0,
                            title: '',
                            description: '',
                            start: start,
                            end: end,
                            allDay: false,
                        };

                        if (userValue == true) {
                            openAddEditForm();
                        }
                    }

                    //,editable: true,
                    //eventDrop: function (event) {
                    //    var data = {
                    //        Id: event.eventId,
                    //        Subject: event.title,
                    //        StartDate: event.start.format('DD/MM/YYYY HH:mm A'),
                    //        EndDate: event.end != null ? event.end.format('DD/MM/YYYY HH:mm A') : null,
                    //        Description: event.description,
                    //        //ThemeColor: event.color,
                    //        IsAllDayEvent: event.allDay
                    //    };

                    //    SaveEvent(data);
                    //}
                });
            }

            $('#btnEdit').click(function () {
                //Open modal dialog for edit event
                openAddEditForm();
            });

            $('#btnDelete').click(function () {
                if (selectedEvent != null && confirm('Are you sure?')) {

                    $.ajax({
                        type: "POST",
                        url: '/FinalProject/DeleteEvent',
                        data: { 'eventID': selectedEvent.eventId },
                        success: function (data) {
                            if (data.status) {
                                //Refresh the calender
                                FetchEventAndRenderCalendar();
                                $('#myModal').modal('hide');
                            }
                        },
                        error: function () {
                            alert('Failed');
                        }
                    });
                }
            });

            $('#dtp1,#dtp2').datetimepicker({
                format: 'DD/MM/YYYY HH:mm A',
                minDate: new Date()
            });

            $('#chkIsAllDay').change(function () {
                if ($(this).is(':checked')) {
                    $('#divEndDate').hide();
                }
                else {
                    $('#divEndDate').show();
                }
            });

            function openAddEditForm() {
                //$("#inviteId option:selected").prop("selected", false);

                //Above can also be done by following:-

                //$("#inviteId").val('');
                //or

                $("#inviteId").multiselect("clearSelection");

                if (selectedEvent != null) {
                    $('#hdEventID').val(selectedEvent.eventId);
                    $('#txtSubject').val(selectedEvent.title);
                    $('#txtStart').val(selectedEvent.start.format('DD/MM/YYYY HH:mm A'));
                    $('#chkIsAllDay').prop("checked", selectedEvent.allDay || false);
                    $('#chkIsAllDay').change();
                    $('#txtEnd').val(selectedEvent.end != null ? selectedEvent.end.format('DD/MM/YYYY HH:mm A') : '');
                    $('#txtDescription').val(selectedEvent.description);

                    if (selectedEvent.eventId > 0) {
                        $.ajax({
                            type: "Get",
                            url: '/FinalProject/GetInviteIds',
                            data: $('#hdEventID').val(selectedEvent.eventId),
                            success: function (data) {
                                debugger;
                                for (var i in data) {
                                    var optionVal = data[i].value;
                                    $("#inviteId").find("option[value=" + optionVal + "]").prop("selected", true);
                                }
                                $("#inviteId").multiselect("refresh");
                            },
                            error: function () {
                                alert('Failed');
                            }
                        });
                    }

                    //$("#inviteId").multiselect("refresh");
                }

                $('#myModal').modal('hide');
                $('#myModalSave').modal();
            }

            $('#btnSave').click(function () {
                //Validation
                if ($('#txtSubject').val().trim() == "") {
                    alert('Subject required');
                    return;
                }
                if ($('#txtStart').val().trim() == "") {
                    alert('Start date required');
                    return;
                }
                if ($('#chkIsAllDay').is(':checked') == false && $('#txtEnd').val().trim() == "") {
                    alert('End date required');
                    return;
                }
                else {
                    var startDate = moment($('#txtStart').val(), "DD/MM/YYYY HH:mm A").toDate();
                    var endDate = moment($('#txtEnd').val(), "DD/MM/YYYY HH:mm A").toDate();
                    if (startDate > endDate) {
                        alert('Invalid end date');
                        return;
                    }
                }

                var data = {
                    Id: $('#hdEventID').val(),
                    Subject: $('#txtSubject').val().trim(),
                    StartDate: $('#txtStart').val().trim(),
                    EndDate: $('#chkIsAllDay').is(':checked') ? null : $('#txtEnd').val().trim(),
                    Description: $('#txtDescription').val(),
                    IsAllDayEvent: $('#chkIsAllDay').is(':checked')
                }

                var listofInvites = [];
                $.each($("#inviteId option:selected"), function (index, data) {
                    listofInvites.push($(this).val());
                });

                if (listofInvites.length == 0) {
                    alert('Please select at least one user');
                    return;
                }

                SaveEvent(data, listofInvites);

            });

            function SaveEvent(data, listofInvites) {
                $.ajax({
                    type: "POST",
                    url: '/FinalProject/SaveEvent',
                    data: { eventObj: data, attendeeObj: listofInvites },
                    success: function (data) {
                        if (data.status) {
                            //Refresh the calender
                            FetchEventAndRenderCalendar();
                            $('#myModalSave').modal('hide');
                        }
                    },
                    error: function () {
                        alert('Failed');
                    }
                });
            }
        });
    </script>
}
